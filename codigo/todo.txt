 |V| - correccion de colisiones.
 |V| - rozamiento de colisiones(todas las necesarias).
 |V| - normales a colisiones(todas las necesarias).
 |V| - hacer una clase Global que contiene el inicializador general, que particularmente contiene:
        + la window,
        + el render,
        + el global_render_texture,
        + el contador de ticks globales,
        + las configuraciones: window_name, height, width, bg_color
      los metodos que debe tener son:
        + constructor mediante las configuraciones,
        + desctuctor que elimine y cierre todo,
        + presentar lo dibujado en la pantalla,
      El problema es que tengo que cambiar todos los lugares que utilizan el render para que 
      utilize el Global. Cuando se crean los objetos fisicos, es necesario utilizar los el
      contador de ticks global para realizar el movimiento basado en el diferencial de tiempo.
 |V| - hacer el movimiento de los objetos basado en el tiempo.
 |T| - cambiar los punteros a unique(SDL_Surface en image_modifier) y unique(SDL_Texture en visualizer).
        Es necesario cambiar los destructores para que se libere la memoria correctamente.
 |V| - re-implementar el uv mapping de los triangulos.
 | | - agregar soporte a fuentes de letras(lo puedo dejar para las vacaciones):
        + https://learn.microsoft.com/en-us/typography/opentype/spec/
        + https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6.html
        + https://developer.apple.com/fonts/TrueType-Reference-Manual/RM02/Chap2.html
 | | - corregir problemas de velocidad que no se hace 0 cuando colisionan.
 | | - rotaciones en las colisiones y rozamiento(todas las necesarias).
 | | - implementar impulse.
 | | - implementar particle.
 | | - implementar gear.
 | | - hacer tempalte las lineas para poder contemplar las lineas verticales.
 | | - falta la funcion project de image_modifier, y la function de print polygon.
 | | - clase para manejo de sequencias de imagenes(Visualizer<D2SEQ>).
 | | - colisiones de poligonos con circulos, cuadrados y lineas.
 | | - colisiones de poligonos con poligonos.
 | | - leer modelo de iluminacion 2d.
 | | - clases para manejo de luz y camara.
 | | - agregar utilizacion de audios.
 | | - re-implementar operations y vectors para mayor eficiencia en las operaciones globales.
